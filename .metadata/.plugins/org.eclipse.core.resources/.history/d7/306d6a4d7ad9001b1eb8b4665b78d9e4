/*
 * Sim7600.cpp
 *
 *  Created on: Jun 30, 2021
 *      Author: ASUS
 */

#include "Sim7600.h"

Sim7600::~Sim7600() {
	// TODO Auto-generated destructor stub
}



/*______________________________________________________________________________________________________________*/
Sim7600::Sim7600( UART_HandleTypeDef * _huartx, UART_HandleTypeDef * _huartx_toDebug ){
	huartx = &*_huartx ;
	huartx_toDebug = &*_huartx_toDebug ;
}



/*______________________________________________________________________________________________________________*/
void Sim7600::IRQHandling() {
	if ( rxByte[0] == '\r' ){
		rxDone_Flag = true ;
	}else {
		rxData += rxByte[0] ;
	}

	HAL_UART_Receive_IT(huartx, (uint8_t*)rxByte, 1 ) ;
}



/*______________________________________________________________________________________________________________*/
void Sim7600::memreset() {
	rxDone_Flag = false ;
	rxData.clear() ;

}



/*______________________________________________________________________________________________________________*/
bool Sim7600::sendATcommand ( const char *_CMD, const char *_expectedAnswer, unsigned long _timeOut ) {
    int answer=0;

    memreset() ;

    HAL_UART_Transmit(huartx_toDebug, (uint8_t*)("-> @sim7600e: "), strlen ("-> @sim7600e: "), _timeOut) ;
    HAL_UART_Transmit(huartx_toDebug, (uint8_t*)_CMD, strlen (_CMD), _timeOut) ;
    HAL_UART_Transmit(huartx_toDebug, (uint8_t*)("\n"), strlen ("\n"), _timeOut) ;

    // Bắt đầu gửi lệnh AT ngay tại đây
    HAL_UART_Transmit(huartx, (uint8_t*)_CMD, strlen (_CMD), _timeOut) ;

    // lệnh này để bắt đầu lấy mốc t.g để check Timeout
    uint32_t tickStart = HAL_GetTick() ;


    while( answer == 0 ) {
    	// Kiểm tra thời gian phản hồi, nếu lâu quá timeout thì break, và báo lỗi
		if ( (unsigned long)( HAL_GetTick() - tickStart )  >=  _timeOut )
			break ;

		// Nếu có thi la OK, answer == 1, thoát khỏi vòng while
		if ( strstr(rxData, _expectedAnswer) != NULL )
			answer = 1;
	}

    // In thông tin mà module sim đã phản hồi về :
    HAL_UART_Transmit(huartx_toDebug, (uint8_t*)rxData.c_str(), strlen ( rxData.c_str() ), _timeOut) ;
    HAL_UART_Transmit(huartx_toDebug, (uint8_t*)("\n"), strlen ("\n"), _timeOut) ;

    // Reset lại các biến phục vụ trong quá trình lấy dữ liệu từ module sim
    dataCount = 0 ;

    return answer;
}



/*______________________________________________________________________________________________________________*/
char* Sim7600::getCSQ() {
	static char result [3] = {0} ;
	sendATcommand( "AT\r", "OK", 100) ;

	// Bắt đầu lấy dữ liệu:
	if ( sendATcommand( "AT+CSQ\r" , "OK", 2000) == true ) {
		char data [ strlen( strstr( rxData, "+CSQ:") ) ] = {0} ;
		strcpy( data, strstr( rxData, "+CSQ:") ) ;

		char temp[3] = {0} ;
		for ( int i = 0; i < 3; i++ ) {
			if ( data[i+6] == ',' ){
				if ( i == 1 ) {
					strcat( result, "00") ;
					strcat( result, temp) ;
				}
				if ( i == 2 ) {
					strcat( result, "0") ;
					strcat( result, temp) ;
				}

				break ;
			}
			else temp [i] = data [i+6] ;
		}
	}

	return result ;
}
